/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package escenariocomplexo;

import escenariocomplexo.Database.DatabaseManager;
import escenariocomplexo.Objects.Propietario;
import escenariocomplexo.Utils.xestorXanelas;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author usuario
 */
public class IFrmListadoPropietarios extends javax.swing.JInternalFrame {
    private final String[] orden= {"nome","dni","tlf","eMail"};
    private int numClicks = 0;
    private int filaSeleccionada = -1;
    private boolean ordenAscendente = true;

    /**
     * Creates new form IFrmListadoPropietariod
     */
    public IFrmListadoPropietarios() {
        initComponents();
        this.setResizable(true);
        
        DefaultTableModel modeloNoEditable = new DefaultTableModel(
                new Object[][]{},
                new String[]{"Nome", "DNI", "tel√©fono", "Email"}
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Hacer que ninguna celda sea editable
            }
        };

        
        tablaPropietarios.setModel(modeloNoEditable);
        anhadirAlPanel("nome",ordenAscendente);
        setComboItems();
    }
    
    private void anhadirAlPanel(String orden, boolean tipo) {
        DefaultTableModel tableModel = (DefaultTableModel) tablaPropietarios.getModel();
        tableModel.setRowCount(0);
        ArrayList<Propietario> lista = DatabaseManager.recuperarTodolosPropietariosPororden(orden, tipo);
        lista.forEach(_item -> {
            Propietario p = (Propietario) _item;
            Object[] linea = {p, p.getDni() ,p.getTlf(),p.geteMail()};
            tableModel.addRow(linea);
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        comboOrden = new javax.swing.JComboBox<>();
        TipoOrden = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPropietarios = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setPreferredSize(new java.awt.Dimension(400, 200));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel2.setPreferredSize(new java.awt.Dimension(733, 495));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Orden");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.15;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel1, gridBagConstraints);

        comboOrden.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboOrden.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboOrdenItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.33;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(comboOrden, gridBagConstraints);

        TipoOrden.setText("Ascendente");
        TipoOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TipoOrdenActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.33;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(TipoOrden, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_END;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel1.add(jPanel2, gridBagConstraints);

        jPanel3.setMinimumSize(new java.awt.Dimension(16, 20));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        tablaPropietarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaPropietarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaPropietariosMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tablaPropietariosMouseExited(evt);
            }
        });
        jScrollPane1.setViewportView(tablaPropietarios);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.8;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel1.add(jPanel3, gridBagConstraints);

        jButton2.setText("Pechar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButton2)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButton2)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel1.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboOrdenItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboOrdenItemStateChanged
           if (comboOrden.getSelectedItem() != null){
                anhadirAlPanel(comboOrden.getSelectedItem().toString(), ordenAscendente);
           }else{
               anhadirAlPanel(orden[0], ordenAscendente);
           }
       
       
    }//GEN-LAST:event_comboOrdenItemStateChanged

    private void TipoOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TipoOrdenActionPerformed
        if (ordenAscendente){
            ordenAscendente = false;
            TipoOrden.setText("descendente");
        }else{
            ordenAscendente = true;
            TipoOrden.setText("ascendente");
        }
        if (comboOrden.getSelectedItem() != null){
                anhadirAlPanel(comboOrden.getSelectedItem().toString(), ordenAscendente);
           }else{
               anhadirAlPanel(orden[0], ordenAscendente);
           }
    }//GEN-LAST:event_TipoOrdenActionPerformed

    private void tablaPropietariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaPropietariosMouseClicked
          if (tablaPropietarios.getSelectedRow()!= -1){
              if (filaSeleccionada == tablaPropietarios.getSelectedRow()){
                  numClicks++;
              }else{
                  filaSeleccionada = tablaPropietarios.getSelectedRow();
                  numClicks = 0;
              }
              if (numClicks == 1){
                   Propietario p = (Propietario)tablaPropietarios.getModel().getValueAt(tablaPropietarios.getSelectedRow(), 0);
                   numClicks = 0;
                    xestorXanelas.nuevoEditarPropietarios(getDesktopPane(),p,this);
              }
      }
    }//GEN-LAST:event_tablaPropietariosMouseClicked

    private void tablaPropietariosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaPropietariosMouseExited
        
    }//GEN-LAST:event_tablaPropietariosMouseExited

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        xestorXanelas.cerrarListadoPropietarios();
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton TipoOrden;
    private javax.swing.JComboBox<String> comboOrden;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaPropietarios;
    // End of variables declaration//GEN-END:variables

    private void setComboItems() {
        comboOrden.removeAllItems();
        for(String ordenItem : orden){
            comboOrden.addItem(ordenItem);
        }
    }

    void cargarNuevatablas() {
       if (comboOrden.getSelectedItem() != null){
                anhadirAlPanel(comboOrden.getSelectedItem().toString(), ordenAscendente);
           }else{
               anhadirAlPanel(orden[0], ordenAscendente);
           }
    }
    
}
