/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package presentacion;

import bd.ConsultasSQLPerrucaria;
import clases.CitaPerrucaria;
import clases.ListadoPerrucaria;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import utilidades.Datas;

/**
 *
 * @author usuario
 */
public class IFrmCitasListar extends javax.swing.JInternalFrame {

    DefaultTableModel modeloTabla;
    
    /**
     * Creates new form IFrmCitasListar
     */
    public IFrmCitasListar() {
        initComponents();
        jPanel3.setVisible(false);
        //modeloTabla = new DefaultTableModel();
        //tblLista.setModel(modeloTabla);
        modeloTabla = (DefaultTableModel) tblLista.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        cmbFiltro = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        txtDesde = new javax.swing.JTextField();
        txtAta = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLista = new javax.swing.JTable();
        btnEliminar = new javax.swing.JButton();
        btnPechar = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Busqueda de citas"));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        cmbFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "   ", "Data" }));
        cmbFiltro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbFiltroItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(cmbFiltro, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.4;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(txtDesde, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.4;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(txtAta, gridBagConstraints);

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(btnBuscar, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.7;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Resultados da busqueda"));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        tblLista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "PROPIETARIO", "CAN", "DATA", "HORA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblLista);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jScrollPane1, gridBagConstraints);

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(btnEliminar, gridBagConstraints);

        btnPechar.setText("Pechar");
        btnPechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPecharActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(btnPechar, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.7;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jPanel2, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPecharActionPerformed
        // TODO add your handling code here:
        XestorDeXanelas.pecharIFrmCitasListar();
        dispose();
    }//GEN-LAST:event_btnPecharActionPerformed

    private void cmbFiltroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbFiltroItemStateChanged
        // TODO add your handling code here:
        if(evt.getStateChange() == ItemEvent.SELECTED){
            if(cmbFiltro.getSelectedItem().equals("Data")){
                jPanel3.setVisible(true);
            }
        }
    }//GEN-LAST:event_cmbFiltroItemStateChanged

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        String fechaDesde = txtDesde.getText();
        String fechaAta = txtAta.getText();
        
        if(!Datas.isData_Dia_BARRA_Mes_BARRA_Anho_Valida(fechaDesde)){
            JOptionPane.showMessageDialog(this, "La fecha introducida no tiene el formato correcto, el formato de la fecha debe ser dd/MM/yyyy", "Atenci√≥n", JOptionPane.WARNING_MESSAGE);
            txtDesde.setText("");
            return;
        }
        if(!Datas.isData_Dia_BARRA_Mes_BARRA_Anho_Valida(fechaAta)){
            JOptionPane.showMessageDialog(this, "La fecha introducida no tiene el formato correcto, el formato de la fecha debe ser dd/MM/yyyy", "Atenci√≥n", JOptionPane.WARNING_MESSAGE);
            txtAta.setText("");
            return;
        }
        
        int resultado = Datas.compararDatasEnFormatoDia_BARRA_Mes_BARRA_Anho(fechaDesde, fechaAta);
        
        if(resultado != 1){
            JOptionPane.showMessageDialog(this, "La primera fecha debe ser de antes que la segunda", "Atenci√≥n", JOptionPane.WARNING_MESSAGE);
            txtDesde.setText("");
            txtAta.setText("");
            return;
        }
        
        cargarCitas();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        if(tblLista.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(this, "Debes seleccionar la cita que deseas eliminar", "Atenci√≥n", JOptionPane.WARNING_MESSAGE);
            return;
        }
        ListadoPerrucaria citaEliminar = (ListadoPerrucaria) tblLista.getValueAt(tblLista.getSelectedRow(), 0);
        int eliminar = ConsultasSQLPerrucaria.eliminarUnhaCitaDadoSeuCodigo(citaEliminar.getCodCita());
        if(eliminar == 0){
            JOptionPane.showMessageDialog(this, "Cta eliminada correctamente", "Atenci√≥n", JOptionPane.WARNING_MESSAGE);
            cargarCitas();
        }else{
            JOptionPane.showMessageDialog(this, "Hubo un error al eliminar la cita vuelva a intentarlo", "Atenci√≥n", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnPechar;
    private javax.swing.JComboBox<String> cmbFiltro;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblLista;
    private javax.swing.JTextField txtAta;
    private javax.swing.JTextField txtDesde;
    // End of variables declaration//GEN-END:variables

    private void cargarCitas() {
        String fechaDesdeBien = Datas.Data_Dia_BARRA_Mes_BARRA_AnhoAFormatoMySQLYYYY_GUION_MM_GUION_DD(txtDesde.getText());
        String fechaAtaBien = Datas.Data_Dia_BARRA_Mes_BARRA_AnhoAFormatoMySQLYYYY_GUION_MM_GUION_DD(txtAta.getText());
        Vector<ListadoPerrucaria> citas = ConsultasSQLPerrucaria.recuperarTodaAsCitasDePerrucariaEntreDuasDatas(fechaDesdeBien, fechaAtaBien);
        
        modeloTabla.setRowCount(0);
        if(citas == null){
            JOptionPane.showMessageDialog(this, "Ocurreu un erro de base de datos ao recuperar a lista de citas entre las fechas", "Atenci√≥n", JOptionPane.WARNING_MESSAGE);
            modeloTabla.setRowCount(0);
            return;
        }else{
            for (int i = 0; i < citas.size(); i++) {
                ListadoPerrucaria cita = citas.elementAt(i);
                int filaActual = modeloTabla.getRowCount();
                modeloTabla.setRowCount(filaActual + 1);
                modeloTabla.setValueAt(cita, filaActual, 0);
                modeloTabla.setValueAt(cita.getCan(), filaActual, 1);
                modeloTabla.setValueAt(cita.getData(), filaActual, 2);
                modeloTabla.setValueAt(cita.getHora(), filaActual, 3);
            }
        }
    }
}
