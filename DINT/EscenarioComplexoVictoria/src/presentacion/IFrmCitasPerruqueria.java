/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package presentacion;

import bd.ConsultasSQL;
import bd.ConsultasSQLPerrucaria;
import clases.Can;
import clases.CitaPerrucaria;
import clases.Propietario;
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import utilidades.Datas;

/**
 *
 * @author usuario
 */
public class IFrmCitasPerruqueria extends javax.swing.JInternalFrame {
    
    DefaultComboBoxModel<Propietario> modeloPropietario;
    DefaultComboBoxModel<Can> modeloCans;
    JRadioButton[] horas;

    /**
     * Creates new form IFrmCitasPerruqueria
     */
    public IFrmCitasPerruqueria() {
        initComponents();
        modeloPropietario = new DefaultComboBoxModel<Propietario>();
        cmbPropietario.setModel(modeloPropietario);
        modeloCans = new DefaultComboBoxModel<>();
        cmbCan.setModel(modeloCans);
        horas = new JRadioButton[]{ckb10, ckb11, ckb12, ckb16, ckb17};
        cargarPropietariosNuevos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        btnGrpHoras = new javax.swing.ButtonGroup();
        lblPropietario = new javax.swing.JLabel();
        cmbPropietario = new javax.swing.JComboBox();
        lblCan = new javax.swing.JLabel();
        cmbCan = new javax.swing.JComboBox();
        pnlCita = new javax.swing.JPanel();
        lblData = new javax.swing.JLabel();
        txtData = new javax.swing.JTextField();
        btnNovaData = new javax.swing.JButton();
        ckb10 = new javax.swing.JRadioButton();
        ckb11 = new javax.swing.JRadioButton();
        ckb12 = new javax.swing.JRadioButton();
        ckb16 = new javax.swing.JRadioButton();
        ckb17 = new javax.swing.JRadioButton();
        btnReservar = new javax.swing.JButton();
        btnPechar = new javax.swing.JButton();

        setClosable(true);
        setResizable(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        lblPropietario.setText("Propietario");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(lblPropietario, gridBagConstraints);

        cmbPropietario.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPropietarioItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.4;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(cmbPropietario, gridBagConstraints);

        lblCan.setText("Can");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(lblCan, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.4;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(cmbCan, gridBagConstraints);

        pnlCita.setBorder(javax.swing.BorderFactory.createTitledBorder("Cita"));
        pnlCita.setLayout(new java.awt.GridBagLayout());

        lblData.setText("Data");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlCita.add(lblData, gridBagConstraints);

        txtData.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.4;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlCita.add(txtData, gridBagConstraints);

        btnNovaData.setText("Nova data");
        btnNovaData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovaDataActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlCita.add(btnNovaData, gridBagConstraints);

        btnGrpHoras.add(ckb10);
        ckb10.setText("10.00h");
        ckb10.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlCita.add(ckb10, gridBagConstraints);

        btnGrpHoras.add(ckb11);
        ckb11.setText("11.00h");
        ckb11.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlCita.add(ckb11, gridBagConstraints);

        btnGrpHoras.add(ckb12);
        ckb12.setText("12.00h");
        ckb12.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlCita.add(ckb12, gridBagConstraints);

        btnGrpHoras.add(ckb16);
        ckb16.setText("16.00h");
        ckb16.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlCita.add(ckb16, gridBagConstraints);

        btnGrpHoras.add(ckb17);
        ckb17.setText("17.00h");
        ckb17.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlCita.add(ckb17, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.6;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(pnlCita, gridBagConstraints);

        btnReservar.setText("Reservar");
        btnReservar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReservarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(btnReservar, gridBagConstraints);

        btnPechar.setText("Pechar");
        btnPechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPecharActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(btnPechar, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbPropietarioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPropietarioItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            String dniPropietario = modeloPropietario.getElementAt(cmbPropietario.getSelectedIndex()).getDni();
            cargarCansNuevos(dniPropietario);
        }
    }//GEN-LAST:event_cmbPropietarioItemStateChanged

    private void btnPecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPecharActionPerformed
        // TODO add your handling code here:
        XestorDeXanelas.pecharIFrmCitas();
        dispose();
        
    }//GEN-LAST:event_btnPecharActionPerformed

    private void btnNovaDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovaDataActionPerformed
        // TODO add your handling code here:
        if (txtData.isEditable()) {
            txtData.setEnabled(true);
            btnNovaData.setText("Amosar citas");
        }
        
        String fecha = txtData.getText();
        boolean fechaValida = Datas.isData_Dia_BARRA_Mes_BARRA_Anho_Valida(fecha);
        if (!fechaValida) {
            JOptionPane.showMessageDialog(this, "La fecha introducida no tiene el formato correcto, el formato de la fecha debe ser dd/MM/yyyy", "Atención", JOptionPane.WARNING_MESSAGE);
            txtData.setText("");
            return;
        } else {
            String dataBD = Datas.Data_Dia_BARRA_Mes_BARRA_AnhoAFormatoMySQLYYYY_GUION_MM_GUION_DD(fecha);
            mostrarCitasDisponibles(dataBD);
        }
        

    }//GEN-LAST:event_btnNovaDataActionPerformed

    private void btnReservarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReservarActionPerformed
        // TODO add your handling code here:
        Can can = (Can) cmbCan.getSelectedItem();
        if (can == null) {
            JOptionPane.showMessageDialog(this, "Debes seleccionar un perro", "Atención", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        String data = txtData.getText().trim();
        if (data.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debes introducir una fecha", "Atención", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        String horaSeleccionada = "";
        for (JRadioButton rbuton : horas) {
            if (rbuton.isSelected()) {
                horaSeleccionada = rbuton.getText();
            }
        }
        String hora = horaSeleccionada.substring(0,2);
        String fechaBD = Datas.Data_Dia_BARRA_Mes_BARRA_AnhoAFormatoMySQLYYYY_GUION_MM_GUION_DD(data);
        CitaPerrucaria cita = new CitaPerrucaria(can.getChip(), fechaBD, Integer.parseInt(hora));
        
        int resultado = ConsultasSQLPerrucaria.inserirCitaPerrucaria(cita);
        if (resultado == 0) {
            JOptionPane.showMessageDialog(this, "Cita guardada correctamente", "Atención", JOptionPane.WARNING_MESSAGE);
            mostrarCitasDisponibles(fechaBD);
            return;
        }else{
            JOptionPane.showMessageDialog(this, "Ha habido un problema al guardar la cita, porfavor intentelo de nievo", "Atención", JOptionPane.WARNING_MESSAGE);
           return;
        }
    }//GEN-LAST:event_btnReservarActionPerformed
    
    public void mostrarCitasDisponibles(String fecha) {
        ArrayList<CitaPerrucaria> citas = ConsultasSQLPerrucaria.recuperarTodaAsCitasDunhaData(fecha);
        
        for (JRadioButton buton : horas) {
            buton.setForeground(Color.GREEN);
            buton.setEnabled(true);
            String textoBoton = buton.getText();
            
            for (CitaPerrucaria cita : citas) {
                String hora = cita.getHora00();
                if (textoBoton.equals(hora)) {
                    buton.setForeground(Color.RED);
                    buton.setEnabled(false);
                }
            }
        }
    }
    
    private void cargarPropietariosNuevos() {
        modeloPropietario.removeAllElements();
        Vector propietarios = ConsultasSQL.recuperarTodolosPropietarios();
        if (propietarios == null) {
            JOptionPane.showMessageDialog(this, "Ocurreu un erro de base de datos ao recuperar os propietarios. Erro -10. Póñase en contacto co administrador", "Atención", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            for (int i = 0; i < propietarios.size(); i++) {
                modeloPropietario.addElement((Propietario) propietarios.elementAt(i));
            }
        }
    }
    
    private void cargarCansNuevos(String dni) {
        modeloCans.removeAllElements();
        Vector cans = ConsultasSQL.recuperarTodolosCansDunPropietario(dni);
        if (cans == null) {
            JOptionPane.showMessageDialog(this, "Ocurreu un erro de base de datos ao recuperar os cans do propietario. Erro -11. Póñase en contacto co administrador", "Atención", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            for (int i = 0; i < cans.size(); i++) {
                modeloCans.addElement((Can) cans.elementAt(i));
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btnGrpHoras;
    private javax.swing.JButton btnNovaData;
    private javax.swing.JButton btnPechar;
    private javax.swing.JButton btnReservar;
    private javax.swing.JRadioButton ckb10;
    private javax.swing.JRadioButton ckb11;
    private javax.swing.JRadioButton ckb12;
    private javax.swing.JRadioButton ckb16;
    private javax.swing.JRadioButton ckb17;
    private javax.swing.JComboBox cmbCan;
    private javax.swing.JComboBox cmbPropietario;
    private javax.swing.JLabel lblCan;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblPropietario;
    private javax.swing.JPanel pnlCita;
    private javax.swing.JTextField txtData;
    // End of variables declaration//GEN-END:variables
}
